apply plugin: 'com.android.library'
apply plugin: 'maven'
apply plugin: 'signing'
apply plugin: 'io.codearte.nexus-staging'

def LOCALHOST_IP = System.properties['LOCALHOST_IP'] ?: '"10.0.2.2"';
def GATEWAY_IP = System.properties['GATEWAY_IP'] ?: '"10.0.2.2"';
def GATEWAY_PORT = System.properties['GATEWAY_PORT'] ?: '"3000"';

version '4.7.1-SNAPSHOT'

android {
    compileSdkVersion 31
    buildToolsVersion '30.0.3'

    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 31
        versionCode 85
        versionName version

        consumerProguardFiles 'proguard.pro'

        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'
    }

    resourcePrefix 'bt_'

    packagingOptions {
        exclude 'META-INF/maven/com.google.guava/guava/pom.properties'
        exclude 'META-INF/maven/com.google.guava/guava/pom.xml'
    }

    testOptions.unitTests {
        returnDefaultValues true
        includeAndroidResources true
    }

    lintOptions {
        warning 'GradleCompatible'
        textReport true
        textOutput 'stdout'
        disable 'InvalidPackage' // The Cardinal SDK is referencing the `javax.naming` package but it is unavailable
    }

    sourceSets {
        String sharedTestDir = 'src/sharedTest/java'
        test {
            java.srcDir sharedTestDir
        }
    }
}

android.buildTypes.debug { type ->
    type.buildConfigField 'String', 'LOCALHOST_IP', LOCALHOST_IP
    type.buildConfigField 'String', 'GATEWAY_IP', GATEWAY_IP
    type.buildConfigField 'String', 'GATEWAY_PORT', GATEWAY_PORT
}

dependencies {
    api 'com.braintreepayments.api:braintree:3.18.0'
    api 'com.braintreepayments:card-form:4.3.0'
    api 'com.braintreepayments.api:three-d-secure:3.18.0'
    implementation 'androidx.cardview:cardview:1.0.0'
    implementation 'com.google.android.gms:play-services-wallet:16.0.0'

    testImplementation 'org.powermock:powermock-module-junit4:1.6.6'
    testImplementation 'org.powermock:powermock-module-junit4-rule:1.6.6'
    testImplementation 'org.powermock:powermock-api-mockito:1.6.6'
    testImplementation 'org.powermock:powermock-classloading-xstream:1.6.6'
    testImplementation 'org.robolectric:robolectric:4.3'
    testImplementation 'org.skyscreamer:jsonassert:1.4.0'
    testImplementation 'com.squareup.assertj:assertj-android:1.1.1'

    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
}

rootProject.allprojects {
    repositories {
        maven {
            url "https://cardinalcommerceprod.jfrog.io/artifactory/android"
            credentials {
                username 'braintree_team_sdk'
                password 'AKCp8jQcoDy2hxSWhDAUQKXLDPDx6NYRkqrgFLRc3qDrayg6rrCbJpsKKyMwaykVL8FWusJpp'
            }
        }
    }
}

/* maven deploy + signing */
task javadocs(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    failOnError false
}

task javadocsJar(type: Jar, dependsOn: javadocs) {
    classifier = 'javadoc'
    from javadocs.destinationDir
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from android.sourceSets.main.java.srcDirs
}

artifacts {
    archives javadocsJar
    archives sourcesJar
}

signing {
    required {
        !version.endsWith("SNAPSHOT") && !version.endsWith("DEVELOPMENT")
    }
    sign configurations.archives
}

nexusStaging {
    packageGroup = "com.braintreepayments"
}

def sonatypeUsername = System.env['SONATYPE_USERNAME']
def sonatypePassword = System.env['SONATYPE_PASSWORD']

uploadArchives {
    repositories {
        mavenDeployer {
            beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

            if (version.endsWith("DEVELOPMENT")) {
                repository(url: 'file:///tmp/maven/')
            } else {
                repository(url: 'https://oss.sonatype.org/service/local/staging/deploy/maven2/') {
                    authentication(userName: sonatypeUsername, password: sonatypePassword)
                }
            }

            snapshotRepository(url: 'https://oss.sonatype.org/content/repositories/snapshots/') {
                authentication(userName: sonatypeUsername, password: sonatypePassword)
            }

            pom.setArtifactId 'drop-in'

            pom.project {
                name 'drop-in'
                groupId = 'com.braintreepayments.api'
                version = "${android.defaultConfig.versionName}"
                packaging 'aar'
                description 'Drop-in payment form for Braintree\'s Android SDK. Integrate this library to add a readymade UI for your payments.'
                url 'https://github.com/braintree/braintree-android-drop-in'

                scm {
                    url 'scm:git@github.com:braintree/braintree-android-drop-in.git'
                    connection 'scm:git@github.com:braintree/braintree-android-drop-in.git'
                    developerConnection 'scm:git@github.com:braintree/braintree-android-drop-in.git'
                }

                developers {
                    developer {
                        id 'devs'
                        name 'Braintree Payments'
                    }
                }

                licenses {
                    license {
                        name 'MIT'
                        url 'http://opensource.org/licenses/MIT'
                        distribution 'repo'
                    }
                }
            }

            pom.whenConfigured { MavenPom pom ->
                pom.dependencies.each {
                    if (it.artifactId == 'play-services-wallet') {
                        it.optional = true
                    }
                }
            }
        }
    }
}
